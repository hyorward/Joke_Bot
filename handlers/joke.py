from aiogram import Router
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.filters import Command
from keyboards.inline import get_joke_button
from database import get_daily_joke, generate_voice_message
import os

router = Router()

@router.message(Command("start"))
async def start_command(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∞–Ω–µ–∫–¥–æ—Ç –¥–Ω—è.", reply_markup=get_joke_button())

@router.callback_query(lambda c: c.data == "get_joke")
async def send_joke(callback: CallbackQuery):
    joke = get_daily_joke()  # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–µ–∫–¥–æ—Ç –¥–Ω—è

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–µ–∫–¥–æ—Ç –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞
    await callback.message.answer(f"üòÇ –ê–Ω–µ–∫–¥–æ—Ç –¥–Ω—è:\n\n{joke}")

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    audio_file = generate_voice_message(joke)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
    if not audio_file or not os.path.exists(audio_file):
        await callback.message.answer("–û—à–∏–±–∫–∞: –≥–æ–ª–æ—Å–æ–≤–æ–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback.message.answer_voice(FSInputFile(audio_file))
    await callback.answer()

    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    os.remove(audio_file)
